name: Build Electron App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Set Git config
      run: |
        git config --global user.email "sz1magmat@vasvari.org"
        git config --global user.name "sz1magmat"

    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install dependencies
      run: npm ci
      working-directory: desktop

    - name: Build and package Electron app
      run: npm run build
      working-directory: desktop

    - name: Display electron-packager command output
      run: |
        npm install electron-packager -g
        electron-packager . --platform=win32 --arch=x64 --asar --out=dist --overwrite --debug
      working-directory: desktop

    - name: Create Release
      id: create_release
      run: |
        gh release create v1.0.0 --title "Release v1.0.0" --notes "Description of the release. Please download 'Your App Name-Setup-1.0.0.exe' instead of the source code archives."
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Fetch Release
      id: fetch_release
      run: |
        echo "UPLOAD_URL=$(gh api repos/:owner/:repo/releases/tags/v1.0.0 --jq '.upload_url')" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: ./desktop/dist/Your App Name-Setup-1.0.0.exe
        asset_name: Your App Name-Setup-1.0.0.exe
        asset_content_type: application/octet-stream
